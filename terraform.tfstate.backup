{
  "version": 4,
  "terraform_version": "1.3.3",
  "serial": 606,
  "lineage": "06bc48b3-8497-d768-c4b1-daf55925746a",
  "outputs": {
    "account_id": {
      "value": "874981734016",
      "type": "string"
    },
    "private_ip_addr": {
      "value": [
        "10.0.1.141",
        "10.0.1.182",
        "10.0.1.180"
      ],
      "type": [
        "tuple",
        [
          "string",
          "string",
          "string"
        ]
      ]
    },
    "private_ip_addr1": {
      "value": "10.0.1.141",
      "type": "string"
    },
    "private_ip_addr2": {
      "value": "10.0.1.182",
      "type": "string"
    },
    "profile": {
      "value": "test",
      "type": "string"
    },
    "public_ip_addr": {
      "value": [
        "35.90.35.182",
        "34.221.132.178",
        "34.222.228.200"
      ],
      "type": [
        "tuple",
        [
          "string",
          "string",
          "string"
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "874981734016",
            "arn": "arn:aws:iam::874981734016:user/ninasquad",
            "id": "874981734016",
            "user_id": "AIDA4XOHZW2AM7FDONGEF"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "user-data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "8c4b45b33abf43da4384b0ddb2922b23d743347973bc9cd040e012144ca69378",
            "rendered": "#!/bin/bash\n\napt update -y\n\nsudo apt  install awscli -y\n\n############# ZOOKEEPER PRIVATE CONFIGURATION ##############\n\nZOOKEEPER_VERSION=3.7.1\n\napt install default-jdk -y\n\nmkdir -p /zk \u0026\u0026 useradd -r -d /zk -s /usr/sbin/nologin zoo\n\nmkdir -p /opt/zookeeper \u0026\u0026 \\\n    curl \"https://dlcdn.apache.org/zookeeper/zookeeper-$ZOOKEEPER_VERSION/apache-zookeeper-$ZOOKEEPER_VERSION-bin.tar.gz\" \\\n    -o /opt/zookeeper/zookeeper.tar.gz \u0026\u0026 \\\n    mkdir -p /zk \u0026\u0026 cd /zk \u0026\u0026 \\\n    tar -xvzf /opt/zookeeper/zookeeper.tar.gz --strip 1\n\nchown -R zoo:zoo /zk\n\nsudo -u zoo mkdir -p /zk/data\nsudo -u zoo mkdir -p /zk/data-log\nsudo -u zoo mkdir -p /zk/logs\n\ncat \u003e /etc/systemd/system/zookeeper.service \u003c\u003c EOF\n[Unit]\nDescription=Zookeeper Daemon\nDocumentation=http://zookeeper.apache.org\nRequires=network.target\nAfter=network.target\n[Service]\nType=forking\nWorkingDirectory=/zk\nUser=zoo\nGroup=zoo\nExecStart=/bin/sh -c '/zk/bin/zkServer.sh start /zk/conf/zoo.cfg \u003e /zk/logs/start-zk.log 2\u003e\u00261'\nExecStop=/zk/bin/zkServer.sh stop /zk/conf/zoo.cfg\nExecReload=/zk/bin/zkServer.sh restart /zk/conf/zoo.cfg\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=default.target\nEOF\n\n\nsystemctl daemon-reload\nsystemctl enable zookeeper\n\nsudo cat \u003e /zk/data/myid \u003c\u003c EOF\n1\nEOF\n\nstring=\"$(aws ssm get-parameter --name \"/test/private-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"${array[0]}\"\nserver2=\"${array[1]}\"\nserver3=\"${array[2]}\"\n\nsudo cat \u003e /zk/conf/zoo.cfg \u003c\u003c EOF\ntickTime=2000\ninitLimit=10\nsyncLimit=5\nclientPort=2181\ndataDir=/zk/data\ndataLogDir=/zk/data-log\nmaxClientCnxns=60\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\nserver.1=0.0.0.0:2888:3888\nserver.2=$server2:2888:3888\nserver.3=$server3:2888:3888\nEOF\n\n\n\n\n############# KAFKA PUBLIC CONFIGURATION ##############\n\nKAFKA_VERSION=3.2.0\n\nmkdir -p /kafka \u0026\u0026 useradd -r -d /kafka -s /usr/sbin/nologin kafka\n\nmkdir -p /opt/kafka \u0026\u0026 \\\n    curl \"https://archive.apache.org/dist/kafka/$KAFKA_VERSION/kafka_2.13-$KAFKA_VERSION.tgz\" \\\n    -o /opt/kafka/kafka.tar.gz \u0026\u0026 \\\n    mkdir -p /kafka \u0026\u0026 cd /kafka \u0026\u0026 \\\n    tar -xvzf /opt/kafka/kafka.tar.gz --strip 1\n\nchown -R kafka:kafka /kafka\nsudo -u kafka mkdir -p /kafka/log\nsudo -u kafka mkdir -p /kafka/logs\n\n\ncat \u003e /etc/systemd/system/kafka.service \u003c\u003c EOF\n[Unit]\nDescription=Apache Kafka Server\nDocumentation=http://kafka.apache.org/documentation.html\nRequires=network.target\nAfter=network.target\n[Service]\nType=simple\nWorkingDirectory=/kafka\nUser=kafka\nGroup=kafka\nExecStart=/bin/sh -c '/kafka/bin/kafka-server-start.sh /kafka/config/server.properties \u003e /kafka/logs/start-kafka.log 2\u003e\u00261'\nExecStop=/kafka/bin/kafka-server-stop.sh\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload\nsystemctl enable kafka\n\nmv /kafka/config/server.properties /kafka/config/server.properties-backup\n\nstring=\"$(aws ssm get-parameter --name \"/test/public-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"${array[0]}\"\nserver2=\"${array[1]}\"\nserver3=\"${array[2]}\"\n\nsudo cat \u003e /kafka/config/server.properties \u003c\u003c EOF\nbroker.id=0\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\nlog.dirs=/kafka/log\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nzookeeper.connect=$server1:2181,$server2:2181,$server3:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\nadvertised.listeners=PLAINTEXT://$server1:9092\nEOF\n\nsudo systemctl start zookeeper\nsudo systemctl start kafka",
            "template": "#!/bin/bash\n\napt update -y\n\nsudo apt  install awscli -y\n\n############# ZOOKEEPER PRIVATE CONFIGURATION ##############\n\nZOOKEEPER_VERSION=3.7.1\n\napt install default-jdk -y\n\nmkdir -p /zk \u0026\u0026 useradd -r -d /zk -s /usr/sbin/nologin zoo\n\nmkdir -p /opt/zookeeper \u0026\u0026 \\\n    curl \"https://dlcdn.apache.org/zookeeper/zookeeper-$ZOOKEEPER_VERSION/apache-zookeeper-$ZOOKEEPER_VERSION-bin.tar.gz\" \\\n    -o /opt/zookeeper/zookeeper.tar.gz \u0026\u0026 \\\n    mkdir -p /zk \u0026\u0026 cd /zk \u0026\u0026 \\\n    tar -xvzf /opt/zookeeper/zookeeper.tar.gz --strip 1\n\nchown -R zoo:zoo /zk\n\nsudo -u zoo mkdir -p /zk/data\nsudo -u zoo mkdir -p /zk/data-log\nsudo -u zoo mkdir -p /zk/logs\n\ncat \u003e /etc/systemd/system/zookeeper.service \u003c\u003c EOF\n[Unit]\nDescription=Zookeeper Daemon\nDocumentation=http://zookeeper.apache.org\nRequires=network.target\nAfter=network.target\n[Service]\nType=forking\nWorkingDirectory=/zk\nUser=zoo\nGroup=zoo\nExecStart=/bin/sh -c '/zk/bin/zkServer.sh start /zk/conf/zoo.cfg \u003e /zk/logs/start-zk.log 2\u003e\u00261'\nExecStop=/zk/bin/zkServer.sh stop /zk/conf/zoo.cfg\nExecReload=/zk/bin/zkServer.sh restart /zk/conf/zoo.cfg\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=default.target\nEOF\n\n\nsystemctl daemon-reload\nsystemctl enable zookeeper\n\nsudo cat \u003e /zk/data/myid \u003c\u003c EOF\n1\nEOF\n\nstring=\"$(aws ssm get-parameter --name \"/test/private-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"$${array[0]}\"\nserver2=\"$${array[1]}\"\nserver3=\"$${array[2]}\"\n\nsudo cat \u003e /zk/conf/zoo.cfg \u003c\u003c EOF\ntickTime=2000\ninitLimit=10\nsyncLimit=5\nclientPort=2181\ndataDir=/zk/data\ndataLogDir=/zk/data-log\nmaxClientCnxns=60\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\nserver.1=0.0.0.0:2888:3888\nserver.2=$server2:2888:3888\nserver.3=$server3:2888:3888\nEOF\n\n\n\n\n############# KAFKA PUBLIC CONFIGURATION ##############\n\nKAFKA_VERSION=3.2.0\n\nmkdir -p /kafka \u0026\u0026 useradd -r -d /kafka -s /usr/sbin/nologin kafka\n\nmkdir -p /opt/kafka \u0026\u0026 \\\n    curl \"https://archive.apache.org/dist/kafka/$KAFKA_VERSION/kafka_2.13-$KAFKA_VERSION.tgz\" \\\n    -o /opt/kafka/kafka.tar.gz \u0026\u0026 \\\n    mkdir -p /kafka \u0026\u0026 cd /kafka \u0026\u0026 \\\n    tar -xvzf /opt/kafka/kafka.tar.gz --strip 1\n\nchown -R kafka:kafka /kafka\nsudo -u kafka mkdir -p /kafka/log\nsudo -u kafka mkdir -p /kafka/logs\n\n\ncat \u003e /etc/systemd/system/kafka.service \u003c\u003c EOF\n[Unit]\nDescription=Apache Kafka Server\nDocumentation=http://kafka.apache.org/documentation.html\nRequires=network.target\nAfter=network.target\n[Service]\nType=simple\nWorkingDirectory=/kafka\nUser=kafka\nGroup=kafka\nExecStart=/bin/sh -c '/kafka/bin/kafka-server-start.sh /kafka/config/server.properties \u003e /kafka/logs/start-kafka.log 2\u003e\u00261'\nExecStop=/kafka/bin/kafka-server-stop.sh\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload\nsystemctl enable kafka\n\nmv /kafka/config/server.properties /kafka/config/server.properties-backup\n\nstring=\"$(aws ssm get-parameter --name \"/test/public-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"$${array[0]}\"\nserver2=\"$${array[1]}\"\nserver3=\"$${array[2]}\"\n\nsudo cat \u003e /kafka/config/server.properties \u003c\u003c EOF\nbroker.id=0\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\nlog.dirs=/kafka/log\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nzookeeper.connect=$server1:2181,$server2:2181,$server3:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\nadvertised.listeners=PLAINTEXT://$server1:9092\nEOF\n\nsudo systemctl start zookeeper\nsudo systemctl start kafka",
            "vars": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "fb8aad7162f9fc2fa512b561de32feafb941186df187cf7ab9f62b9b1fa33793",
            "rendered": "#!/bin/bash\n\napt update -y\n\nsudo apt  install awscli -y\n\n#sudo apt  install jq -y\n\nZOOKEEPER_VERSION=3.7.1\n\napt install default-jdk -y\n\nmkdir -p /zk \u0026\u0026 useradd -r -d /zk -s /usr/sbin/nologin zoo\n\nmkdir -p /opt/zookeeper \u0026\u0026 \\\n    curl \"https://dlcdn.apache.org/zookeeper/zookeeper-$ZOOKEEPER_VERSION/apache-zookeeper-$ZOOKEEPER_VERSION-bin.tar.gz\" \\\n    -o /opt/zookeeper/zookeeper.tar.gz \u0026\u0026 \\\n    mkdir -p /zk \u0026\u0026 cd /zk \u0026\u0026 \\\n    tar -xvzf /opt/zookeeper/zookeeper.tar.gz --strip 1\n\nchown -R zoo:zoo /zk\n\nsudo -u zoo mkdir -p /zk/data\nsudo -u zoo mkdir -p /zk/data-log\nsudo -u zoo mkdir -p /zk/logs\n\ncat \u003e /etc/systemd/system/zookeeper.service \u003c\u003c EOF\n[Unit]\nDescription=Zookeeper Daemon\nDocumentation=http://zookeeper.apache.org\nRequires=network.target\nAfter=network.target\n[Service]\nType=forking\nWorkingDirectory=/zk\nUser=zoo\nGroup=zoo\nExecStart=/bin/sh -c '/zk/bin/zkServer.sh start /zk/conf/zoo.cfg \u003e /zk/logs/start-zk.log 2\u003e\u00261'\nExecStop=/zk/bin/zkServer.sh stop /zk/conf/zoo.cfg\nExecReload=/zk/bin/zkServer.sh restart /zk/conf/zoo.cfg\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=default.target\nEOF\n\n\nsystemctl daemon-reload\nsystemctl enable zookeeper\n\nsudo cat \u003e /zk/data/myid \u003c\u003c EOF\n2\nEOF\n\nstring=\"$(aws ssm get-parameter --name \"/test/private-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"${array[0]}\"\nserver2=\"${array[1]}\"\nserver3=\"${array[2]}\"\n\nsudo cat \u003e /zk/conf/zoo.cfg \u003c\u003c EOF\ntickTime=2000\ninitLimit=10\nsyncLimit=5\nclientPort=2181\ndataDir=/zk/data\ndataLogDir=/zk/data-log\nmaxClientCnxns=60\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\nserver.1=$server1:2888:3888\nserver.2=0.0.0.0:2888:3888\nserver.3=$server3:2888:3888\nEOF\n\n\n\n############# KAFKA PUBLIC CONFIGURATION ##############\n\nKAFKA_VERSION=3.2.0\n\nmkdir -p /kafka \u0026\u0026 useradd -r -d /kafka -s /usr/sbin/nologin kafka\n\nmkdir -p /opt/kafka \u0026\u0026 \\\n    curl \"https://archive.apache.org/dist/kafka/$KAFKA_VERSION/kafka_2.13-$KAFKA_VERSION.tgz\" \\\n    -o /opt/kafka/kafka.tar.gz \u0026\u0026 \\\n    mkdir -p /kafka \u0026\u0026 cd /kafka \u0026\u0026 \\\n    tar -xvzf /opt/kafka/kafka.tar.gz --strip 1\n\nchown -R kafka:kafka /kafka\nsudo -u kafka mkdir -p /kafka/log\nsudo -u kafka mkdir -p /kafka/logs\n\n\ncat \u003e /etc/systemd/system/kafka.service \u003c\u003c EOF\n[Unit]\nDescription=Apache Kafka Server\nDocumentation=http://kafka.apache.org/documentation.html\nRequires=network.target\nAfter=network.target\n[Service]\nType=simple\nWorkingDirectory=/kafka\nUser=kafka\nGroup=kafka\nExecStart=/bin/sh -c '/kafka/bin/kafka-server-start.sh /kafka/config/server.properties \u003e /kafka/logs/start-kafka.log 2\u003e\u00261'\nExecStop=/kafka/bin/kafka-server-stop.sh\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload\nsystemctl enable kafka\n\nmv /kafka/config/server.properties /kafka/config/server.properties-backup\n\nstring=\"$(aws ssm get-parameter --name \"/test/public-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"${array[0]}\"\nserver2=\"${array[1]}\"\nserver3=\"${array[2]}\"\n\nsudo cat \u003e /kafka/config/server.properties \u003c\u003c EOF\nbroker.id=1\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\nlog.dirs=/kafka/log\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nzookeeper.connect=$server1:2181,$server2:2181,$server3:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\nadvertised.listeners=PLAINTEXT://$server2:9092\nEOF\n\nsudo systemctl start zookeeper\nsudo systemctl start kafka",
            "template": "#!/bin/bash\n\napt update -y\n\nsudo apt  install awscli -y\n\n#sudo apt  install jq -y\n\nZOOKEEPER_VERSION=3.7.1\n\napt install default-jdk -y\n\nmkdir -p /zk \u0026\u0026 useradd -r -d /zk -s /usr/sbin/nologin zoo\n\nmkdir -p /opt/zookeeper \u0026\u0026 \\\n    curl \"https://dlcdn.apache.org/zookeeper/zookeeper-$ZOOKEEPER_VERSION/apache-zookeeper-$ZOOKEEPER_VERSION-bin.tar.gz\" \\\n    -o /opt/zookeeper/zookeeper.tar.gz \u0026\u0026 \\\n    mkdir -p /zk \u0026\u0026 cd /zk \u0026\u0026 \\\n    tar -xvzf /opt/zookeeper/zookeeper.tar.gz --strip 1\n\nchown -R zoo:zoo /zk\n\nsudo -u zoo mkdir -p /zk/data\nsudo -u zoo mkdir -p /zk/data-log\nsudo -u zoo mkdir -p /zk/logs\n\ncat \u003e /etc/systemd/system/zookeeper.service \u003c\u003c EOF\n[Unit]\nDescription=Zookeeper Daemon\nDocumentation=http://zookeeper.apache.org\nRequires=network.target\nAfter=network.target\n[Service]\nType=forking\nWorkingDirectory=/zk\nUser=zoo\nGroup=zoo\nExecStart=/bin/sh -c '/zk/bin/zkServer.sh start /zk/conf/zoo.cfg \u003e /zk/logs/start-zk.log 2\u003e\u00261'\nExecStop=/zk/bin/zkServer.sh stop /zk/conf/zoo.cfg\nExecReload=/zk/bin/zkServer.sh restart /zk/conf/zoo.cfg\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=default.target\nEOF\n\n\nsystemctl daemon-reload\nsystemctl enable zookeeper\n\nsudo cat \u003e /zk/data/myid \u003c\u003c EOF\n2\nEOF\n\nstring=\"$(aws ssm get-parameter --name \"/test/private-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"$${array[0]}\"\nserver2=\"$${array[1]}\"\nserver3=\"$${array[2]}\"\n\nsudo cat \u003e /zk/conf/zoo.cfg \u003c\u003c EOF\ntickTime=2000\ninitLimit=10\nsyncLimit=5\nclientPort=2181\ndataDir=/zk/data\ndataLogDir=/zk/data-log\nmaxClientCnxns=60\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\nserver.1=$server1:2888:3888\nserver.2=0.0.0.0:2888:3888\nserver.3=$server3:2888:3888\nEOF\n\n\n\n############# KAFKA PUBLIC CONFIGURATION ##############\n\nKAFKA_VERSION=3.2.0\n\nmkdir -p /kafka \u0026\u0026 useradd -r -d /kafka -s /usr/sbin/nologin kafka\n\nmkdir -p /opt/kafka \u0026\u0026 \\\n    curl \"https://archive.apache.org/dist/kafka/$KAFKA_VERSION/kafka_2.13-$KAFKA_VERSION.tgz\" \\\n    -o /opt/kafka/kafka.tar.gz \u0026\u0026 \\\n    mkdir -p /kafka \u0026\u0026 cd /kafka \u0026\u0026 \\\n    tar -xvzf /opt/kafka/kafka.tar.gz --strip 1\n\nchown -R kafka:kafka /kafka\nsudo -u kafka mkdir -p /kafka/log\nsudo -u kafka mkdir -p /kafka/logs\n\n\ncat \u003e /etc/systemd/system/kafka.service \u003c\u003c EOF\n[Unit]\nDescription=Apache Kafka Server\nDocumentation=http://kafka.apache.org/documentation.html\nRequires=network.target\nAfter=network.target\n[Service]\nType=simple\nWorkingDirectory=/kafka\nUser=kafka\nGroup=kafka\nExecStart=/bin/sh -c '/kafka/bin/kafka-server-start.sh /kafka/config/server.properties \u003e /kafka/logs/start-kafka.log 2\u003e\u00261'\nExecStop=/kafka/bin/kafka-server-stop.sh\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload\nsystemctl enable kafka\n\nmv /kafka/config/server.properties /kafka/config/server.properties-backup\n\nstring=\"$(aws ssm get-parameter --name \"/test/public-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"$${array[0]}\"\nserver2=\"$${array[1]}\"\nserver3=\"$${array[2]}\"\n\nsudo cat \u003e /kafka/config/server.properties \u003c\u003c EOF\nbroker.id=1\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\nlog.dirs=/kafka/log\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nzookeeper.connect=$server1:2181,$server2:2181,$server3:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\nadvertised.listeners=PLAINTEXT://$server2:9092\nEOF\n\nsudo systemctl start zookeeper\nsudo systemctl start kafka",
            "vars": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "c34352b927dfb709444fdc109a302e0c94ea381de4e709cef4f3060a3f80c362",
            "rendered": "#!/bin/bash\n\napt update -y\n\nsudo apt  install awscli -y\n\n#sudo apt  install jq -y\n\nZOOKEEPER_VERSION=3.7.1\n\napt install default-jdk -y\n\nmkdir -p /zk \u0026\u0026 useradd -r -d /zk -s /usr/sbin/nologin zoo\n\nmkdir -p /opt/zookeeper \u0026\u0026 \\\n    curl \"https://dlcdn.apache.org/zookeeper/zookeeper-$ZOOKEEPER_VERSION/apache-zookeeper-$ZOOKEEPER_VERSION-bin.tar.gz\" \\\n    -o /opt/zookeeper/zookeeper.tar.gz \u0026\u0026 \\\n    mkdir -p /zk \u0026\u0026 cd /zk \u0026\u0026 \\\n    tar -xvzf /opt/zookeeper/zookeeper.tar.gz --strip 1\n\nchown -R zoo:zoo /zk\n\nsudo -u zoo mkdir -p /zk/data\nsudo -u zoo mkdir -p /zk/data-log\nsudo -u zoo mkdir -p /zk/logs\n\ncat \u003e /etc/systemd/system/zookeeper.service \u003c\u003c EOF\n[Unit]\nDescription=Zookeeper Daemon\nDocumentation=http://zookeeper.apache.org\nRequires=network.target\nAfter=network.target\n[Service]\nType=forking\nWorkingDirectory=/zk\nUser=zoo\nGroup=zoo\nExecStart=/bin/sh -c '/zk/bin/zkServer.sh start /zk/conf/zoo.cfg \u003e /zk/logs/start-zk.log 2\u003e\u00261'\nExecStop=/zk/bin/zkServer.sh stop /zk/conf/zoo.cfg\nExecReload=/zk/bin/zkServer.sh restart /zk/conf/zoo.cfg\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=default.target\nEOF\n\n\nsystemctl daemon-reload\nsystemctl enable zookeeper\n\nsudo cat \u003e /zk/data/myid \u003c\u003c EOF\n3\nEOF\n\nstring=\"$(aws ssm get-parameter --name \"/test/private-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"${array[0]}\"\nserver2=\"${array[1]}\"\nserver3=\"${array[2]}\"\n\nsudo cat \u003e /zk/conf/zoo.cfg \u003c\u003c EOF\ntickTime=2000\ninitLimit=10\nsyncLimit=5\nclientPort=2181\ndataDir=/zk/data\ndataLogDir=/zk/data-log\nmaxClientCnxns=60\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\nserver.1=$server1:2888:3888\nserver.2=$server2:2888:3888\nserver.3=0.0.0.0:2888:3888\nEOF\n\n\n\n############# KAFKA PUBLIC CONFIGURATION ##############\n\nKAFKA_VERSION=3.2.0\n\nmkdir -p /kafka \u0026\u0026 useradd -r -d /kafka -s /usr/sbin/nologin kafka\n\nmkdir -p /opt/kafka \u0026\u0026 \\\n    curl \"https://archive.apache.org/dist/kafka/$KAFKA_VERSION/kafka_2.13-$KAFKA_VERSION.tgz\" \\\n    -o /opt/kafka/kafka.tar.gz \u0026\u0026 \\\n    mkdir -p /kafka \u0026\u0026 cd /kafka \u0026\u0026 \\\n    tar -xvzf /opt/kafka/kafka.tar.gz --strip 1\n\nchown -R kafka:kafka /kafka\nsudo -u kafka mkdir -p /kafka/log\nsudo -u kafka mkdir -p /kafka/logs\n\n\ncat \u003e /etc/systemd/system/kafka.service \u003c\u003c EOF\n[Unit]\nDescription=Apache Kafka Server\nDocumentation=http://kafka.apache.org/documentation.html\nRequires=network.target\nAfter=network.target\n[Service]\nType=simple\nWorkingDirectory=/kafka\nUser=kafka\nGroup=kafka\nExecStart=/bin/sh -c '/kafka/bin/kafka-server-start.sh /kafka/config/server.properties \u003e /kafka/logs/start-kafka.log 2\u003e\u00261'\nExecStop=/kafka/bin/kafka-server-stop.sh\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload\nsystemctl enable kafka\n\nmv /kafka/config/server.properties /kafka/config/server.properties-backup\n\nstring=\"$(aws ssm get-parameter --name \"/test/public-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"${array[0]}\"\nserver2=\"${array[1]}\"\nserver3=\"${array[2]}\"\n\nsudo cat \u003e /kafka/config/server.properties \u003c\u003c EOF\nbroker.id=2\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\nlog.dirs=/kafka/log\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nzookeeper.connect=$server1:2181,$server2:2181,$server3:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\nadvertised.listeners=PLAINTEXT://$server3:9092\nEOF\n\nsudo systemctl start zookeeper\nsudo systemctl start kafka",
            "template": "#!/bin/bash\n\napt update -y\n\nsudo apt  install awscli -y\n\n#sudo apt  install jq -y\n\nZOOKEEPER_VERSION=3.7.1\n\napt install default-jdk -y\n\nmkdir -p /zk \u0026\u0026 useradd -r -d /zk -s /usr/sbin/nologin zoo\n\nmkdir -p /opt/zookeeper \u0026\u0026 \\\n    curl \"https://dlcdn.apache.org/zookeeper/zookeeper-$ZOOKEEPER_VERSION/apache-zookeeper-$ZOOKEEPER_VERSION-bin.tar.gz\" \\\n    -o /opt/zookeeper/zookeeper.tar.gz \u0026\u0026 \\\n    mkdir -p /zk \u0026\u0026 cd /zk \u0026\u0026 \\\n    tar -xvzf /opt/zookeeper/zookeeper.tar.gz --strip 1\n\nchown -R zoo:zoo /zk\n\nsudo -u zoo mkdir -p /zk/data\nsudo -u zoo mkdir -p /zk/data-log\nsudo -u zoo mkdir -p /zk/logs\n\ncat \u003e /etc/systemd/system/zookeeper.service \u003c\u003c EOF\n[Unit]\nDescription=Zookeeper Daemon\nDocumentation=http://zookeeper.apache.org\nRequires=network.target\nAfter=network.target\n[Service]\nType=forking\nWorkingDirectory=/zk\nUser=zoo\nGroup=zoo\nExecStart=/bin/sh -c '/zk/bin/zkServer.sh start /zk/conf/zoo.cfg \u003e /zk/logs/start-zk.log 2\u003e\u00261'\nExecStop=/zk/bin/zkServer.sh stop /zk/conf/zoo.cfg\nExecReload=/zk/bin/zkServer.sh restart /zk/conf/zoo.cfg\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=default.target\nEOF\n\n\nsystemctl daemon-reload\nsystemctl enable zookeeper\n\nsudo cat \u003e /zk/data/myid \u003c\u003c EOF\n3\nEOF\n\nstring=\"$(aws ssm get-parameter --name \"/test/private-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"$${array[0]}\"\nserver2=\"$${array[1]}\"\nserver3=\"$${array[2]}\"\n\nsudo cat \u003e /zk/conf/zoo.cfg \u003c\u003c EOF\ntickTime=2000\ninitLimit=10\nsyncLimit=5\nclientPort=2181\ndataDir=/zk/data\ndataLogDir=/zk/data-log\nmaxClientCnxns=60\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\nserver.1=$server1:2888:3888\nserver.2=$server2:2888:3888\nserver.3=0.0.0.0:2888:3888\nEOF\n\n\n\n############# KAFKA PUBLIC CONFIGURATION ##############\n\nKAFKA_VERSION=3.2.0\n\nmkdir -p /kafka \u0026\u0026 useradd -r -d /kafka -s /usr/sbin/nologin kafka\n\nmkdir -p /opt/kafka \u0026\u0026 \\\n    curl \"https://archive.apache.org/dist/kafka/$KAFKA_VERSION/kafka_2.13-$KAFKA_VERSION.tgz\" \\\n    -o /opt/kafka/kafka.tar.gz \u0026\u0026 \\\n    mkdir -p /kafka \u0026\u0026 cd /kafka \u0026\u0026 \\\n    tar -xvzf /opt/kafka/kafka.tar.gz --strip 1\n\nchown -R kafka:kafka /kafka\nsudo -u kafka mkdir -p /kafka/log\nsudo -u kafka mkdir -p /kafka/logs\n\n\ncat \u003e /etc/systemd/system/kafka.service \u003c\u003c EOF\n[Unit]\nDescription=Apache Kafka Server\nDocumentation=http://kafka.apache.org/documentation.html\nRequires=network.target\nAfter=network.target\n[Service]\nType=simple\nWorkingDirectory=/kafka\nUser=kafka\nGroup=kafka\nExecStart=/bin/sh -c '/kafka/bin/kafka-server-start.sh /kafka/config/server.properties \u003e /kafka/logs/start-kafka.log 2\u003e\u00261'\nExecStop=/kafka/bin/kafka-server-stop.sh\nTimeoutSec=30\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload\nsystemctl enable kafka\n\nmv /kafka/config/server.properties /kafka/config/server.properties-backup\n\nstring=\"$(aws ssm get-parameter --name \"/test/public-ip\" --query \"Parameter.Value\" --output text --region us-west-2)\"\narray=(`echo $string | sed 's/,/\\n/g'`)\nserver1=\"$${array[0]}\"\nserver2=\"$${array[1]}\"\nserver3=\"$${array[2]}\"\n\nsudo cat \u003e /kafka/config/server.properties \u003c\u003c EOF\nbroker.id=2\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\nlog.dirs=/kafka/log\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nzookeeper.connect=$server1:2181,$server2:2181,$server3:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\nadvertised.listeners=PLAINTEXT://$server3:9092\nEOF\n\nsudo systemctl start zookeeper\nsudo systemctl start kafka",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "vijay_profile",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::874981734016:instance-profile/vijay_profile",
            "create_date": "2022-10-24T15:10:49Z",
            "id": "vijay_profile",
            "name": "vijay_profile",
            "name_prefix": null,
            "path": "/",
            "role": "Instance-Role",
            "tags": null,
            "tags_all": {},
            "unique_id": "AIPA4XOHZW2AO7Q2R6TIP"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.access_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "policy1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::874981734016:policy/ECR-Policy",
            "description": "Policy for pulling ECR images",
            "id": "arn:aws:iam::874981734016:policy/ECR-Policy",
            "name": "ECR-Policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ecr:*\",\"cloudtrail:LookupEvents\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"iam:CreateServiceLinkedRole\"],\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":[\"replication.ecr.amazonaws.com\"]}},\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4XOHZW2APOVTWVPRN",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "policy2",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::874981734016:policy/EC2-Policy",
            "description": "Policy for EC2",
            "id": "arn:aws:iam::874981734016:policy/EC2-Policy",
            "name": "EC2-Policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"ec2:RunInstances\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:TerminateInstances\",\"ec2:StartInstances\",\"ec2:StopInstances\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\",\"ec2:DescribeInstances\",\"ec2:DescribeInstanceStatus\",\"ec2:DescribeAddresses\",\"ec2:AssociateAddress\",\"ec2:DisassociateAddress\",\"ec2:DescribeRegions\",\"ec2:DescribeAvailabilityZones\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4XOHZW2AAOPRQ23OF",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "policy3",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::874981734016:policy/SSM-Policy",
            "description": "Policy for SSM",
            "id": "arn:aws:iam::874981734016:policy/SSM-Policy",
            "name": "SSM-Policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ssm:DescribeParameters\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ssm:GetParameters\",\"ssm:GetParameter\",\"ssm:GetParametersByPath\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ssm:us-west-2:874981734016:parameter/test/*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4XOHZW2AJUNDSVTQU",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy_attachment",
      "name": "policy-attach1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "groups": null,
            "id": "policy-attachment1",
            "name": "policy-attachment1",
            "policy_arn": "arn:aws:iam::874981734016:policy/ECR-Policy",
            "roles": [
              "Instance-Role"
            ],
            "users": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.policy1",
            "aws_iam_role.access_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy_attachment",
      "name": "policy-attach2",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "groups": null,
            "id": "policy-attachment2",
            "name": "policy-attachment2",
            "policy_arn": "arn:aws:iam::874981734016:policy/EC2-Policy",
            "roles": [
              "Instance-Role"
            ],
            "users": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.policy2",
            "aws_iam_role.access_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy_attachment",
      "name": "policy-attach3",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "groups": null,
            "id": "policy-attachment3",
            "name": "policy-attachment3",
            "policy_arn": "arn:aws:iam::874981734016:policy/SSM-Policy",
            "roles": [
              "Instance-Role"
            ],
            "users": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.policy3",
            "aws_iam_role.access_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "access_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::874981734016:role/Instance-Role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-10-24T15:10:47Z",
            "description": "",
            "force_detach_policies": false,
            "id": "Instance-Role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "Instance-Role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROA4XOHZW2AGDBQAKUQI"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "VIJAY-TERRAFORM",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-017fecd1353bcc96e",
            "arn": "arn:aws:ec2:us-west-2:874981734016:instance/i-0aaec066f03f3c2ed",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "vijay_profile",
            "id": "i-0aaec066f03f3c2ed",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.medium",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "ninaquad",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-0aab49a69e5705423",
            "private_dns": "ip-10-0-1-141.us-west-2.compute.internal",
            "private_ip": "10.0.1.141",
            "public_dns": "ec2-35-90-35-182.us-west-2.compute.amazonaws.com",
            "public_ip": "35.90.35.182",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0563afcbd17611336",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-0fabcca1ff11139d7",
            "tags": {
              "Name": "Terraform-1"
            },
            "tags_all": {
              "Name": "Terraform-1"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "46185af2a61a4464ee526d7d58e3df481f408851",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0c832ad8bfd143668"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_security_group.public-SG",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-017fecd1353bcc96e",
            "arn": "arn:aws:ec2:us-west-2:874981734016:instance/i-02adef6d8bfc28610",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "vijay_profile",
            "id": "i-02adef6d8bfc28610",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.medium",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "ninaquad",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-06a48041338c4b1b1",
            "private_dns": "ip-10-0-1-182.us-west-2.compute.internal",
            "private_ip": "10.0.1.182",
            "public_dns": "ec2-34-221-132-178.us-west-2.compute.amazonaws.com",
            "public_ip": "34.221.132.178",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0706799634fb9600b",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-0fabcca1ff11139d7",
            "tags": {
              "Name": "Terraform-2"
            },
            "tags_all": {
              "Name": "Terraform-2"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "e2a7e64f81b6aeac31395ae8d90665a5d64db053",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0c832ad8bfd143668"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_security_group.public-SG",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-017fecd1353bcc96e",
            "arn": "arn:aws:ec2:us-west-2:874981734016:instance/i-044bbed983657a239",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "vijay_profile",
            "id": "i-044bbed983657a239",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.medium",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "ninaquad",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-05e7997746ce9699f",
            "private_dns": "ip-10-0-1-180.us-west-2.compute.internal",
            "private_ip": "10.0.1.180",
            "public_dns": "ec2-34-222-228-200.us-west-2.compute.amazonaws.com",
            "public_ip": "34.222.228.200",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0adafe7114183f731",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-0fabcca1ff11139d7",
            "tags": {
              "Name": "Terraform-3"
            },
            "tags_all": {
              "Name": "Terraform-3"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "28699cecf2f178bab6a44b7cbe54a7c973e7c0e0",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0c832ad8bfd143668"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_security_group.public-SG",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "myIGW",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:874981734016:internet-gateway/igw-02a58a1984bd02aed",
            "id": "igw-02a58a1984bd02aed",
            "owner_id": "874981734016",
            "tags": {
              "Name": "myIGW"
            },
            "tags_all": {
              "Name": "myIGW"
            },
            "vpc_id": "vpc-0f0f55ecc9d466f33"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_vpc.myvpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route",
      "name": "vpc-public-route",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-02a58a1984bd02aed",
            "id": "r-rtb-0501355cf0a0f1f961080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0501355cf0a0f1f96",
            "state": "active",
            "timeouts": null,
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.myIGW",
            "aws_route_table.my-public-RT",
            "aws_vpc.myvpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "my-public-RT",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:874981734016:route-table/rtb-0501355cf0a0f1f96",
            "id": "rtb-0501355cf0a0f1f96",
            "owner_id": "874981734016",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "my-public-RT"
            },
            "tags_all": {
              "Name": "my-public-RT"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f0f55ecc9d466f33"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.myvpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "vpc-public-route-table-associate",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0858592c6a56bc778",
            "route_table_id": "rtb-0501355cf0a0f1f96",
            "subnet_id": "subnet-0fabcca1ff11139d7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.my-public-RT",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "public-SG",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:874981734016:security-group/sg-0c832ad8bfd143668",
            "description": "VPC public Security Group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all IP and Ports Outbound",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0c832ad8bfd143668",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 2181",
                "from_port": 2181,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2181
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 22",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 2888",
                "from_port": 2888,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2888
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 3888",
                "from_port": 3888,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 3888
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 443",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 80",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 9092 for plain kafka connections",
                "from_port": 9092,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9092
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow Port 9093 for ssl kafka connections",
                "from_port": 9093,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9093
              }
            ],
            "name": "myvpc-public-SG",
            "name_prefix": "",
            "owner_id": "874981734016",
            "revoke_rules_on_delete": false,
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-0f0f55ecc9d466f33"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.myvpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "private_ips",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-west-2:874981734016:parameter/test/private-ip",
            "data_type": "text",
            "description": "private ips",
            "id": "/test/private-ip",
            "key_id": "",
            "name": "/test/private-ip",
            "overwrite": null,
            "tags": {
              "environment": "Testing-private"
            },
            "tags_all": {
              "environment": "Testing-private"
            },
            "tier": "Standard",
            "type": "StringList",
            "value": "10.0.1.141,10.0.1.182,10.0.1.180",
            "version": 1
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "public_ips",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-west-2:874981734016:parameter/test/public-ip",
            "data_type": "text",
            "description": "public ips",
            "id": "/test/public-ip",
            "key_id": "",
            "name": "/test/public-ip",
            "overwrite": null,
            "tags": {
              "environment": "Testing-public"
            },
            "tags_all": {
              "environment": "Testing-public"
            },
            "tier": "Standard",
            "type": "StringList",
            "value": "35.90.35.182,34.221.132.178,34.222.228.200",
            "version": 1
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "my-public-subnet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:874981734016:subnet/subnet-0fabcca1ff11139d7",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0fabcca1ff11139d7",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "874981734016",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "my-public-subnet"
            },
            "tags_all": {
              "Name": "my-public-subnet"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f0f55ecc9d466f33"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.myvpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "myvpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:874981734016:vpc/vpc-0f0f55ecc9d466f33",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-067f260ad2f71cb8c",
            "default_route_table_id": "rtb-056d5465d77ffd68a",
            "default_security_group_id": "sg-045d64674189ab6dc",
            "dhcp_options_id": "dopt-077a34a3356ea52d3",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-0f0f55ecc9d466f33",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-056d5465d77ffd68a",
            "owner_id": "874981734016",
            "tags": {
              "Name": "myvpc"
            },
            "tags_all": {
              "Name": "myvpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "local_provisioners1",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "8259414236530572818",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_ssm_parameter.private_ips",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "3131556811269175765",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_ssm_parameter.private_ips",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "8226402929541803937",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_ssm_parameter.private_ips",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "local_provisioners2",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "8743606946014436646",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_ssm_parameter.public_ips",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "4009778168732381337",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_ssm_parameter.public_ips",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "4486461385947432954",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_instance_profile.vijay_profile",
            "aws_iam_role.access_role",
            "aws_instance.VIJAY-TERRAFORM",
            "aws_security_group.public-SG",
            "aws_ssm_parameter.public_ips",
            "aws_subnet.my-public-subnet",
            "aws_vpc.myvpc",
            "data.template_file.user-data"
          ]
        }
      ]
    }
  ],
  "check_results": []
}
